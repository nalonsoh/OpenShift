apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: spring-boot-template
parameters:
- name: "APP_NAME"
  description: "Nombre de la aplicaci√≥n"
  required: true 
- name: "PROJECT_NAME"
  description: "Nombre del proyecto"
  required: true 
- name: "SOURCE_REPOSITORY"
  description: "URL del repositorio git"
  required: true 
objects:
# -- IMAGE STREAMs --
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    generation: 1
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    lookupPolicy:
      local: false
#    tags:
#    - annotations: null
#      from:
#        kind: DockerImage
#        name: 172.30.1.1:5000/myproject/web-app-prueba:latest
#      generation: null
#      importPolicy: {}
#      name: latest
#      referencePolicy:
#        type: ""
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    generation: 1
    labels:
      app: ${APP_NAME}
    name: spring-boot-app-builder
  spec:
    lookupPolicy:
      local: false
    tags:
#    - annotations: null
    - from:
        kind: DockerImage
        name: noelalonso1/spring-boot-app-builder:latest
      name: latest
# BUID CONFIG
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: master
        uri: ${SOURCE_REPOSITORY}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: spring-boot-app-builder:latest
          namespace: ${PROJECT_NAME}
      type: Source
    triggers:
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
#    - generic:
#        secret: ec67c99dac3ecaa8
#      type: Generic
#    - github:
#        secret: 799632aad76c3882
#      type: GitHub
# DEPLOYMENT CONFIG
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 2
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${APP_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
      spec:
        containers:
        - image: 172.30.1.1:5000/${PROJECT_NAME}/${APP_NAME}:latest
          imagePullPolicy: Always
          name: ${APP_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 20
    test: false
    triggers:
#    - imageChangeParams:
#        automatic: true
#        containerNames:
#        - ${APP_NAME}
#        from:
#          kind: ImageStreamTag
#          name: web-app-prueba:latest
#          namespace: myproject
#        lastTriggeredImage: 172.30.1.1:5000/myproject/web-app-prueba@sha256:c4cb3f9f7d5186465c8016fde10a99c0fe4b58c349eaae329b70ab8a8467d333
#      type: ImageChange
    - type: ConfigChange
# -- SERVICE --
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: ${APP_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
# -- ROUTE --
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    host: ${APP_NAME}-${PROJECT_NAME}.192.168.111.133.nip.io
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100
    wildcardPolicy: None
